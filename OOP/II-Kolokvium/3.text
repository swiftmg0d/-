Да се дефинира класа Cryptocurrency во која ќе се чуваат инфомации за една криптовалута и тоа:

Име на валутата (динамички алоцирана низа од знаци)
Код на валутата (низа од најмногу 7 знаци)
Цена на еден coin (реален број)
Количина (Број на coin-и што корисник ги поседува) - реален број
Провизија што се наплаќа при продажба на криптовалути изразена во процент (реален број од 0-100). Овој процент е ист за сите криптовалути и може да биде сменет.
Иницијално изнесува 2.5 проценти.
За класата да се имплементираат:

Потребните конструктори, деструктор, сет и гет методи (5)
Оператор за печатење << во формат: [kod] [ime] [cena] [kolicina] [vkupna vrednost]. 
Вкупната вредност се пресметува како производ на цената и бројот на coins што корисникот ги поседува. (5)
Оператор += за додавање на објект од тип Cryptocurrency.
Додавањето е возможно само доколку криптовалутите имаат ист код и исто име. Во спротивно да се фрли исклучок од тип InvalidOperation. 
Треба да се обезбеди справување со овој исклучок во функцијата main. При фаќање на овој исклучок да се испечати порака “Can’t merge two different cryptocurrencies”. При додавање на криптовалутита, цената се менува со цената на новододадената криптовалута, додека пак количината е еднаква на збирот на количините на двете криптовалути. (10)
Метод double sell () - што ќе симулира продавање на сите coins од оваа криптовалута. Методот враќа колку профит би остварил сопственикот од продажбата.
Профитот се пресметува како разлика на вкупната вредност на криптовалутата и провизијата што треба да се наплати (процент од вкупната вредност). (5) Пример, доколку валутата Х има цена 10, а количина 100, вкупната вредност е 1000. Доколку процентот за провизија е 2.5, од вкупната вредност 1000, провизијата изнесува 25, па методот sell() треба да врати 975.
Да се дефинира класа Wallet за репрезентација на еден дигитален паричник во која ќе се чуваат информации за:

Име на сопственикот на паричникот (низа од најмногу 40 знаци)
Листа од криптовалути (динамички алоцирана низа од објекти од класа Cryptocurrency)
Број на елементи во листата од криптовалути (цел број)
За класата да се имплементираат:

Потребните конструктори, деструктор, сет и гет методи (5)
Оператор за печатење << во формат: [ime] Cryptocurrencies: [crypto1] [crypto2] … [cryptoN]при што информациите за криптовалутите се печатат во нов ред. (5)
Оператор += за додавање на криптовалута во дигиталниот паричник. Доколку постои валута со ист код и исто име во паричникот,
на таа валута да и се додаде новата криптовалута. (15)
